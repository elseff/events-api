apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres:13-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: postgres-configmap
            - name: POSTGRES_DATA
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DATA
                  name: postgres-configmap
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: postgres-secret
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-secret
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: pg-data
          readinessProbe:
            exec:
              command: ["pg_isready"]
            initialDelaySeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["pg_isready"]
            initialDelaySeconds: 20
            timeoutSeconds: 2
      volumes:
        - name: pg-data
          persistentVolumeClaim:
            claimName: pvc-postgres-data